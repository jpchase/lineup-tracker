# @format

name: CI

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch.
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  # Override the folder where the Firebase emulators are cached. The folder
  # must be in the workspace, so that a hash of the files can be computed below.
  FIREBASE_EMULATORS_PATH: $GITHUB_WORKSPACE/emulator-cache
  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: 'America/Toronto'

      - uses: actions/checkout@v4.2.2

      - name: Cache node modules
        uses: actions/cache@v4.2.2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache Firebase emulators
        uses: actions/cache@v4.2.2
        env:
          cache-name: cache-firebase-emulators
        with:
          # Firebase emulator files are stored in `~/.cache/firebase/emulators` on Linux/macOS
          path: ${{ env.FIREBASE_EMULATORS_PATH }}
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('emulator-cache/*.{jar,zip}') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Archive test reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: integration-tests
          path: reports/tests-integration/

      - name: Archive test screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: test/integration/screenshots-current/

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: reports/lcov-report/

  lhci:
    name: Lighthouse
    runs-on: ubuntu-latest
    # Disable the job as there's nowhere to upload the results
    if: false

    steps:
      - uses: actions/checkout@v4.2.2

      - name: npm install, build
        run: |
          npm ci
          npm run build:test

      - name: run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.14.x
          echo "chrome path=$(which google-chrome-stable)"
          lhci autorun --config=./config/lighthouserc.js
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          LHCI_TOKEN: ${{ secrets.LHCI_UPLOAD_TOKEN }}
          CHROME_PATH: /usr/bin/google-chrome-stable
